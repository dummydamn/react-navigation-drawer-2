"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = build;

var _chalk = _interopRequireDefault(require("chalk"));

var _path = _interopRequireDefault(require("path"));

var _child_process = _interopRequireDefault(require("child_process"));

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _del = _interopRequireDefault(require("del"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function build({
  root,
  output,
  report
}) {
  report.info('Cleaning up previous build');
  await (0, _del.default)([output]);
  report.info(`Generating type definitions with ${_chalk.default.blue('tsc')}`);

  const tsc = _path.default.join(root, 'node_modules', '.bin', 'tsc');

  try {
    if (await _fsExtra.default.pathExists(tsc)) {
      _child_process.default.execFileSync(tsc, ['--declaration', '--emitDeclarationOnly', '--outDir', output]);

      report.success(`Wrote definition files to ${_chalk.default.blue(_path.default.relative(root, output))}`);
    } else {
      throw new Error(`The ${_chalk.default.blue('tsc')} binary doesn't seem to be installed under ${_chalk.default.blue('node_modules')}. Make sure you have added ${_chalk.default.blue('typescript')} to your ${_chalk.default.blue('devDependencies')}.`);
    }
  } catch (e) {
    if (e.stdout) {
      report.error(`Errors found when building definition files.\n${e.stdout.toString()}`);
    } else {
      report.error(e.message);
    }

    throw new Error('Failed to build definition files.');
  }
}
//# sourceMappingURL=typescript.js.map
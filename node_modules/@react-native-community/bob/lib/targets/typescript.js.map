{"version":3,"sources":["../../src/targets/typescript.ts"],"names":["build","root","output","report","info","chalk","blue","tsc","path","join","fs","pathExists","child_process","execFileSync","success","relative","Error","e","stdout","error","toString","message"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;AAGe,eAAeA,KAAf,CAAqB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAArB,EAAsD;AACnEA,EAAAA,MAAM,CAACC,IAAP,CAAY,4BAAZ;AAEA,QAAM,kBAAI,CAACF,MAAD,CAAJ,CAAN;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAa,oCAAmCC,eAAMC,IAAN,CAAW,KAAX,CAAkB,EAAlE;;AAEA,QAAMC,GAAG,GAAGC,cAAKC,IAAL,CAAUR,IAAV,EAAgB,cAAhB,EAAgC,MAAhC,EAAwC,KAAxC,CAAZ;;AAEA,MAAI;AACF,QAAI,MAAMS,iBAAGC,UAAH,CAAcJ,GAAd,CAAV,EAA8B;AAC5BK,6BAAcC,YAAd,CAA2BN,GAA3B,EAAgC,CAC9B,eAD8B,EAE9B,uBAF8B,EAG9B,UAH8B,EAI9BL,MAJ8B,CAAhC;;AAOAC,MAAAA,MAAM,CAACW,OAAP,CACG,6BAA4BT,eAAMC,IAAN,CAAWE,cAAKO,QAAL,CAAcd,IAAd,EAAoBC,MAApB,CAAX,CAAwC,EADvE;AAGD,KAXD,MAWO;AACL,YAAM,IAAIc,KAAJ,CACH,OAAMX,eAAMC,IAAN,CACL,KADK,CAEL,8CAA6CD,eAAMC,IAAN,CAC7C,cAD6C,CAE7C,8BAA6BD,eAAMC,IAAN,CAC7B,YAD6B,CAE7B,YAAWD,eAAMC,IAAN,CAAW,iBAAX,CAA8B,GAPvC,CAAN;AASD;AACF,GAvBD,CAuBE,OAAOW,CAAP,EAAU;AACV,QAAIA,CAAC,CAACC,MAAN,EAAc;AACZf,MAAAA,MAAM,CAACgB,KAAP,CACG,iDAAgDF,CAAC,CAACC,MAAF,CAASE,QAAT,EAAoB,EADvE;AAGD,KAJD,MAIO;AACLjB,MAAAA,MAAM,CAACgB,KAAP,CAAaF,CAAC,CAACI,OAAf;AACD;;AAED,UAAM,IAAIL,KAAJ,CAAU,mCAAV,CAAN;AACD;AACF","sourcesContent":["import chalk from 'chalk';\nimport path from 'path';\nimport child_process from 'child_process';\nimport fs from 'fs-extra';\nimport del from 'del';\nimport { Input } from '../types';\n\nexport default async function build({ root, output, report }: Input) {\n  report.info('Cleaning up previous build');\n\n  await del([output]);\n\n  report.info(`Generating type definitions with ${chalk.blue('tsc')}`);\n\n  const tsc = path.join(root, 'node_modules', '.bin', 'tsc');\n\n  try {\n    if (await fs.pathExists(tsc)) {\n      child_process.execFileSync(tsc, [\n        '--declaration',\n        '--emitDeclarationOnly',\n        '--outDir',\n        output,\n      ]);\n\n      report.success(\n        `Wrote definition files to ${chalk.blue(path.relative(root, output))}`\n      );\n    } else {\n      throw new Error(\n        `The ${chalk.blue(\n          'tsc'\n        )} binary doesn't seem to be installed under ${chalk.blue(\n          'node_modules'\n        )}. Make sure you have added ${chalk.blue(\n          'typescript'\n        )} to your ${chalk.blue('devDependencies')}.`\n      );\n    }\n  } catch (e) {\n    if (e.stdout) {\n      report.error(\n        `Errors found when building definition files.\\n${e.stdout.toString()}`\n      );\n    } else {\n      report.error(e.message);\n    }\n\n    throw new Error('Failed to build definition files.');\n  }\n}\n"],"file":"typescript.js"}
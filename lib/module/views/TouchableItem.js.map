{"version":3,"names":["React","Platform","TouchableNativeFeedback","TouchableOpacity","View","ANDROID_VERSION_LOLLIPOP","TouchableItem","OS","Version","props","style","rest","Ripple","pressColor","borderless","Children","only","children","Component","defaultProps"],"sources":["TouchableItem.tsx"],"sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport * as React from 'react';\nimport {\n  Platform,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  View,\n  TouchableWithoutFeedback,\n} from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\ntype Props = React.ComponentProps<typeof TouchableWithoutFeedback> & {\n  pressColor: string;\n  borderless: boolean;\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)',\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (\n      Platform.OS === 'android' &&\n      Platform.Version >= ANDROID_VERSION_LOLLIPOP\n    ) {\n      const { style, ...rest } = this.props;\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          style={null}\n          background={TouchableNativeFeedback.Ripple(\n            this.props.pressColor,\n            this.props.borderless\n          )}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    }\n\n    return (\n      <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>\n    );\n  }\n}\n"],"mappings":"6wCASA,MAAO,GAAKA,MAAK,KAAM,OAAO,CAC9B,OACEC,QAAQ,CACRC,uBAAuB,CACvBC,gBAAgB,CAChBC,IAAI,KAEC,cAAc,CAErB,GAAMC,yBAAwB,CAAG,EAAE,CAAC,GAOfC,cAAa,+PAMhC,iBAAS,CASP,GACEL,QAAQ,CAACM,EAAE,GAAK,SAAS,EACzBN,QAAQ,CAACO,OAAO,EAAIH,wBAAwB,CAC5C,CACA,gBAA2B,IAAI,CAACI,KAAK,CAA7BC,KAAK,aAALA,KAAK,CAAKC,IAAI,iDACtB,MACE,qBAAC,uBAAuB,aAClBA,IAAI,EACR,KAAK,CAAE,IAAK,CACZ,UAAU,CAAET,uBAAuB,CAACU,MAAM,CACxC,IAAI,CAACH,KAAK,CAACI,UAAU,CACrB,IAAI,CAACJ,KAAK,CAACK,UAAU,CACrB,iEAEF,oBAAC,IAAI,EAAC,KAAK,CAAEJ,KAAM,iEAAEV,KAAK,CAACe,QAAQ,CAACC,IAAI,CAAC,IAAI,CAACP,KAAK,CAACQ,QAAQ,CAAC,CAAQ,CAC7C,CAE9B,CAEA,MACE,qBAAC,gBAAgB,aAAK,IAAI,CAACR,KAAK,kEAAG,IAAI,CAACA,KAAK,CAACQ,QAAQ,CAAoB,CAE9E,CAAC,2BArCwCjB,KAAK,CAACkB,SAAS,EAArCZ,aAAa,CACzBa,YAAY,CAAG,CACpBL,UAAU,CAAE,KAAK,CACjBD,UAAU,CAAE,oBACd,CAAC,QAJkBP,aAAa"}
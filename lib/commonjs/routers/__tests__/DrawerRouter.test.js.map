{"version":3,"names":["INIT_ACTION","type","NavigationActions","INIT","it","ScreenA","ScreenB","router","DrawerRouter","Foo","screen","Bar","state","getStateForAction","expectedState","index","isTransitioning","routes","key","routeName","params","undefined","isDrawerOpen","expect","toEqual","state2","NAVIGATE","expectedState2","getComponentForState","FooScreen","BarScreen","initialRouteName","DrawerActions","OPEN_DRAWER","state3","CLOSE_DRAWER","state4","TOGGLE_DRAWER","action","lastState","changed","FooView","React","Component","BarRouter","SwitchRouter","Qux","Quo","BarView","emptyState","init","initState","openDrawer","toBe","state0","navigate","initSwitchState","initQuxState","state1","setParams","foo","state1switchState","state1quxState","DrawerScreen","StackRouter","Baz","Drawer","DRAWER_OPENED","back"],"sources":["DrawerRouter.test.tsx"],"sourcesContent":["/* eslint react/display-name:0 */\n\nimport * as React from 'react';\nimport DrawerRouter from '../DrawerRouter';\n\nimport { NavigationActions, SwitchRouter, StackRouter } from 'react-navigation';\nimport * as DrawerActions from '../../routers/DrawerActions';\n\nconst INIT_ACTION = { type: NavigationActions.INIT };\n\nit('handles basic drawer logic and fires close on switch', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n  const expectedState = {\n    index: 0,\n    isTransitioning: false,\n    routes: [\n      { key: 'Foo', routeName: 'Foo', params: undefined },\n      { key: 'Bar', routeName: 'Bar', params: undefined },\n    ],\n    isDrawerOpen: false,\n  };\n  expect(state).toEqual(expectedState);\n  const state2 = router.getStateForAction(\n    { type: NavigationActions.NAVIGATE, routeName: 'Bar' },\n    state\n  );\n  const expectedState2 = {\n    index: 1,\n    isTransitioning: false,\n    routes: [\n      { key: 'Foo', routeName: 'Foo', params: undefined },\n      { key: 'Bar', routeName: 'Bar', params: undefined },\n    ],\n    isDrawerOpen: false,\n  };\n  expect(state2).toEqual(expectedState2);\n  expect(router.getComponentForState(expectedState)).toEqual(ScreenA);\n  expect(router.getComponentForState(expectedState2)).toEqual(ScreenB);\n});\n\nit('handles initial route navigation', () => {\n  const FooScreen = () => <div />;\n  const BarScreen = () => <div />;\n  const router = DrawerRouter(\n    {\n      Foo: {\n        screen: FooScreen,\n      },\n      Bar: {\n        screen: BarScreen,\n      },\n    },\n    { initialRouteName: 'Bar' }\n  );\n  const state = router.getStateForAction({\n    type: NavigationActions.NAVIGATE,\n    routeName: 'Foo',\n  });\n  expect(state).toEqual({\n    index: 0,\n    isDrawerOpen: false,\n    isTransitioning: false,\n    routes: [\n      {\n        key: 'Foo',\n        params: undefined,\n        routeName: 'Foo',\n      },\n      {\n        key: 'Bar',\n        params: undefined,\n        routeName: 'Bar',\n      },\n    ],\n  });\n});\n\nit('drawer opens, closes and toggles', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n\n  expect(state.isDrawerOpen).toEqual(false);\n\n  const state2 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER },\n    state\n  );\n\n  expect(state2.isDrawerOpen).toEqual(true);\n\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.CLOSE_DRAWER },\n    state2\n  );\n\n  expect(state3.isDrawerOpen).toEqual(false);\n\n  const state4 = router.getStateForAction(\n    { type: DrawerActions.TOGGLE_DRAWER },\n    state3\n  );\n\n  expect(state4.isDrawerOpen).toEqual(true);\n});\n\nit('drawer opens, closes with key targeted', () => {\n  const ScreenA = () => <div />;\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n  const state2 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER, key: 'wrong' },\n    state\n  );\n\n  expect(state2.isDrawerOpen).toEqual(false);\n\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.OPEN_DRAWER, key: state.key },\n    state2\n  );\n\n  expect(state3.isDrawerOpen).toEqual(true);\n});\n\nit('nested routers bubble up blocked actions', () => {\n  const ScreenA = () => <div />;\n  ScreenA.router = {\n    getStateForAction(action: { type: string }, lastState: any) {\n      if (action.type === 'CHILD_ACTION') return null;\n      return lastState;\n    },\n  };\n  const ScreenB = () => <div />;\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenB },\n  });\n  const state = router.getStateForAction(INIT_ACTION);\n\n  const state2 = router.getStateForAction({ type: 'CHILD_ACTION' }, state);\n  expect(state2).toEqual(null);\n});\n\nit('drawer does not fire close when child routers return new state', () => {\n  const ScreenA = () => <div />;\n  ScreenA.router = {\n    getStateForAction(\n      action: { type: string },\n      lastState = { changed: false }\n    ) {\n      if (action.type === 'CHILD_ACTION')\n        return { ...lastState, changed: true };\n      return lastState;\n    },\n  };\n  const router = DrawerRouter({\n    Foo: { screen: ScreenA },\n  });\n\n  const state = router.getStateForAction(INIT_ACTION);\n  expect(state.isDrawerOpen).toEqual(false);\n\n  const state2 = router.getStateForAction({ type: 'CHILD_ACTION' }, state);\n  expect(state2.isDrawerOpen).toEqual(false);\n  expect(state2.routes[0].changed).toEqual(true);\n});\n\nit('drawerRouter will close drawer on child navigaton, not on child param changes', () => {\n  class FooView extends React.Component {\n    render() {\n      return <div />;\n    }\n  }\n  const BarRouter = SwitchRouter({\n    Qux: FooView,\n    Quo: FooView,\n  });\n  class BarView extends React.Component {\n    static router = BarRouter;\n    render() {\n      return <div />;\n    }\n  }\n  const router = DrawerRouter({\n    Bar: BarView,\n    Foo: FooView,\n  });\n\n  const emptyState = router.getStateForAction(NavigationActions.init());\n  const initState = router.getStateForAction(\n    DrawerActions.openDrawer(),\n    emptyState\n  );\n  expect(initState.isDrawerOpen).toBe(true);\n\n  const state0 = router.getStateForAction(\n    NavigationActions.navigate({ routeName: 'Quo' }),\n    initState\n  );\n  expect(state0.isDrawerOpen).toBe(false);\n\n  const initSwitchState = initState.routes[initState.index];\n  const initQuxState = initSwitchState.routes[initSwitchState.index];\n\n  const state1 = router.getStateForAction(\n    NavigationActions.setParams({\n      key: initQuxState.key,\n      params: { foo: 'bar' },\n    }),\n    initState\n  );\n  const state1switchState = state1.routes[state1.index];\n  const state1quxState = state1switchState.routes[state1switchState.index];\n  expect(state1.isDrawerOpen).toBe(true); // don't fire close\n  expect(state1quxState.params.foo).toEqual('bar');\n});\n\nit('goBack closes drawer when inside of stack', () => {\n  const ScreenA = () => <div />;\n  const DrawerScreen = () => <div />;\n  DrawerScreen.router = DrawerRouter({\n    Foo: { screen: ScreenA },\n    Bar: { screen: ScreenA },\n  });\n  const router = StackRouter({\n    Baz: { screen: ScreenA },\n    Drawer: { screen: DrawerScreen },\n  });\n  const state0 = router.getStateForAction(INIT_ACTION);\n  expect(state0.index).toEqual(0);\n  const state1 = router.getStateForAction(\n    NavigationActions.navigate({ routeName: 'Foo' }),\n    state0\n  );\n  expect(state1.index).toEqual(1);\n  const state2 = router.getStateForAction(DrawerActions.openDrawer(), state1);\n  const state3 = router.getStateForAction(\n    { type: DrawerActions.DRAWER_OPENED },\n    state2\n  );\n  expect(state3.index).toEqual(1);\n  expect(state3.routes[1].isDrawerOpen).toEqual(true);\n  const state4 = router.getStateForAction(NavigationActions.back(), state3);\n  expect(state4.routes[1].isDrawerOpen).toEqual(false);\n});\n"],"mappings":"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"}
{"version":3,"names":["withDefaultValue","obj","key","defaultValue","hasOwnProperty","getActiveRouteKey","route","routes","index","routeConfigs","config","unmountInactiveRoutes","resetOnBlur","switchRouter","SwitchRouter","getActionCreators","navStateKey","openDrawer","DrawerActions","closeDrawer","toggleDrawer","getStateForAction","action","state","undefined","isDrawerOpen","isRouterTargeted","type","CLOSE_DRAWER","NavigationActions","BACK","OPEN_DRAWER","TOGGLE_DRAWER","switchedState"],"sources":["DrawerRouter.tsx"],"sourcesContent":["import {\n  SwitchRouter,\n  NavigationActions,\n  NavigationAction,\n  NavigationRoute,\n  NavigationRouteConfigMap,\n} from 'react-navigation';\nimport * as DrawerActions from './DrawerActions';\n\ntype State = NavigationRoute & {\n  isDrawerOpen?: any;\n};\n\nfunction withDefaultValue(obj: object, key: string, defaultValue: any): any {\n  // @ts-ignore\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  // @ts-ignore\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = (route: NavigationRoute): string => {\n  if (\n    route.routes &&\n    typeof route.index === 'number' &&\n    route.routes[route.index]\n  ) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n\n  return route.key;\n};\n\nexport default (\n  routeConfigs: NavigationRouteConfigMap<any, any>,\n  config: {\n    unmountInactiveRoutes?: boolean;\n    resetOnBlur?: boolean;\n    initialRouteName?: string;\n  } = {}\n) => {\n  config = { ...config };\n  config = withDefaultValue(\n    config,\n    'resetOnBlur',\n    config.unmountInactiveRoutes ? true : !!config.resetOnBlur\n  );\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route: NavigationRoute, navStateKey: string) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey),\n      };\n    },\n\n    getStateForAction(action: NavigationAction, state?: State) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n        if (\n          action.type === DrawerActions.CLOSE_DRAWER ||\n          (action.type === NavigationActions.BACK && state.isDrawerOpen)\n        ) {\n          return {\n            ...state,\n            isDrawerOpen: false,\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: true,\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: !state.isDrawerOpen,\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        // If any navigation has happened, and the drawer is maybe open, make sure to close it\n        if (\n          getActiveRouteKey(switchedState) !== getActiveRouteKey(state) &&\n          state.isDrawerOpen\n        ) {\n          return {\n            ...switchedState,\n            isDrawerOpen: false,\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    },\n  };\n};\n"],"mappings":"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"}
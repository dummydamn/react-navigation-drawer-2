var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _defineProperty2=_interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _reactNavigation=require("react-navigation");var _DrawerRouter=_interopRequireDefault(require("../routers/DrawerRouter"));var _DrawerView=_interopRequireDefault(require("../views/DrawerView"));var _DrawerNavigatorItems=_interopRequireDefault(require("../views/DrawerNavigatorItems"));var _jsxFileName="/Users/frengky/cephaLabs/utils/react-navigation-drawer/src/navigators/createDrawerNavigator.tsx";function _getRequireWildcardCache(nodeInterop){if(typeof WeakMap!=="function")return null;var cacheBabelInterop=new WeakMap();var cacheNodeInterop=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop;})(nodeInterop);}function _interopRequireWildcard(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule){return obj;}if(obj===null||typeof obj!=="object"&&typeof obj!=="function"){return{default:obj};}var cache=_getRequireWildcardCache(nodeInterop);if(cache&&cache.has(obj)){return cache.get(obj);}var newObj={};var hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var key in obj){if(key!=="default"&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;if(desc&&(desc.get||desc.set)){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}newObj.default=obj;if(cache){cache.set(obj,newObj);}return newObj;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){(0,_defineProperty2.default)(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}var defaultContentComponent=function defaultContentComponent(props){return React.createElement(_reactNative.ScrollView,{alwaysBounceVertical:false,__source:{fileName:_jsxFileName,lineNumber:23,columnNumber:3}},React.createElement(_reactNavigation.SafeAreaView,{forceInset:{top:'always',horizontal:'never'},__source:{fileName:_jsxFileName,lineNumber:24,columnNumber:5}},React.createElement(_DrawerNavigatorItems.default,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:25,columnNumber:7}}))));};var DefaultDrawerConfig={drawerWidth:function drawerWidth(){var _Dimensions$get=_reactNative.Dimensions.get('window'),height=_Dimensions$get.height,width=_Dimensions$get.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=_reactNative.Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);},contentComponent:defaultContentComponent,drawerPosition:_reactNative.I18nManager.isRTL?'right':'left',keyboardDismissMode:'on-drag',drawerBackgroundColor:{light:_reactNavigation.ThemeColors.light.bodyContent,dark:_reactNavigation.ThemeColors.dark.bodyContent},overlayColor:{light:'rgba(0, 0, 0, 0.5)',dark:'rgba(0, 0, 0, 0.5)'},drawerType:'front',hideStatusBar:false,statusBarAnimation:'slide'};var DrawerNavigator=function DrawerNavigator(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var mergedConfig=_objectSpread(_objectSpread({},DefaultDrawerConfig),config);var drawerRouter=(0,_DrawerRouter.default)(routeConfigs,mergedConfig);var navigator=(0,_reactNavigation.createNavigator)(_DrawerView.default,drawerRouter,mergedConfig);return navigator;};var _default=DrawerNavigator;exports.default=_default;
//# sourceMappingURL=createDrawerNavigator.js.map
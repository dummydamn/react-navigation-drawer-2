{"version":3,"names":["DrawerNavigatorItems","activeTintColor","props","context","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","items","activeItemKey","getLabel","renderIcon","onItemPress","itemsContainerStyle","itemStyle","labelStyle","activeLabelStyle","inactiveLabelStyle","iconContainerStyle","drawerPosition","getActiveTintColor","getActiveBackgroundColor","getInactiveTintColor","getInactiveBackgroundColor","styles","container","map","route","index","focused","key","color","backgroundColor","scene","tintColor","icon","label","accessibilityLabel","undefined","extraLabelStyle","item","inactiveIcon","React","Component","defaultProps","light","dark","contextType","ThemeContext","StyleSheet","create","paddingVertical","flexDirection","alignItems","marginHorizontal","width","opacity","margin","fontWeight"],"sources":["DrawerNavigatorItems.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { SafeAreaView, ThemeContext } from 'react-navigation';\nimport TouchableItem from './TouchableItem';\nimport { DrawerNavigatorItemsProps } from '../types';\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default class DrawerNavigatorItems extends React.Component<\n  DrawerNavigatorItemsProps\n> {\n  /* Material design specs - https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs */\n  static defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff',\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)',\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)',\n    },\n    inactiveBackgroundColor: {\n      light: 'transparent',\n      dark: 'transparent',\n    },\n  };\n\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private getActiveTintColor() {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  }\n\n  private getInactiveTintColor() {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  }\n\n  private getActiveBackgroundColor() {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  }\n\n  private getInactiveBackgroundColor() {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  }\n\n  render() {\n    const {\n      items,\n      activeItemKey,\n      getLabel,\n      renderIcon,\n      onItemPress,\n      itemsContainerStyle,\n      itemStyle,\n      labelStyle,\n      activeLabelStyle,\n      inactiveLabelStyle,\n      iconContainerStyle,\n      drawerPosition,\n    } = this.props;\n\n    const activeTintColor = this.getActiveTintColor();\n    const activeBackgroundColor = this.getActiveBackgroundColor();\n    const inactiveTintColor = this.getInactiveTintColor();\n    const inactiveBackgroundColor = this.getInactiveBackgroundColor();\n\n    return (\n      <View style={[styles.container, itemsContainerStyle]}>\n        {items.map((route, index: number) => {\n          const focused = activeItemKey === route.key;\n          const color = focused ? activeTintColor : inactiveTintColor;\n          const backgroundColor = focused\n            ? activeBackgroundColor\n            : inactiveBackgroundColor;\n          const scene = { route, index, focused, tintColor: color };\n          const icon = renderIcon(scene);\n          const label = getLabel(scene);\n          const accessibilityLabel =\n            typeof label === 'string' ? label : undefined;\n          const extraLabelStyle = focused\n            ? activeLabelStyle\n            : inactiveLabelStyle;\n          return (\n            <TouchableItem\n              key={route.key}\n              accessible\n              accessibilityLabel={accessibilityLabel}\n              onPress={() => {\n                onItemPress({ route, focused });\n              }}\n              delayPressIn={0}\n            >\n              <SafeAreaView\n                style={[{ backgroundColor }, styles.item, itemStyle]}\n                forceInset={{\n                  [drawerPosition]: 'always',\n                  [drawerPosition === 'left' ? 'right' : 'left']: 'never',\n                  vertical: 'never',\n                }}\n              >\n                {icon ? (\n                  <View\n                    style={[\n                      styles.icon,\n                      focused ? null : styles.inactiveIcon,\n                      iconContainerStyle,\n                    ]}\n                  >\n                    {icon}\n                  </View>\n                ) : null}\n                {typeof label === 'string' ? (\n                  <Text\n                    style={[\n                      styles.label,\n                      { color },\n                      labelStyle,\n                      extraLabelStyle,\n                    ]}\n                  >\n                    {label}\n                  </Text>\n                ) : (\n                  label\n                )}\n              </SafeAreaView>\n            </TouchableItem>\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginHorizontal: 16,\n    width: 24,\n    alignItems: 'center',\n  },\n  inactiveIcon: {\n    /*\n     * Icons have 0.54 opacity according to guidelines\n     * 100/87 * 54 ~= 62\n     */\n    opacity: 0.62,\n  },\n  label: {\n    margin: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"}